---
# https://github.com/tteck/Proxmox/blob/main/misc/post-pve-install.sh
- hosts: "{{ target_hosts }}"
  become: yes
  vars:
    target_hosts: pve
    install_latest_kernel: yes
    install_intel_microcode: yes
    disable_high_availability: yes

    # apt source list
    enterprise_repo_source_files:
      - /etc/apt/sources.list.d/pve-enterprise.list
      - /etc/apt/sources.list.d/ceph.list
    proxmox_gpg_key_file: /etc/apt/trusted.gpg.d/proxmox-release-{{ ansible_distribution_release }}.gpg
    proxmox_repo_url: http://download.proxmox.com/debian
    repo_options: arch=amd64 signed-by={{ proxmox_gpg_key_file }}
    pve_no_sub_repo_source: deb [{{ repo_options }}] {{ proxmox_repo_url }}/pve {{ ansible_distribution_release }} pve-no-subscription
    ceph_release: ceph-quincy
    ceph_no_sub_repo_source:  deb [{{ repo_options }}] {{ proxmox_repo_url }}/{{ ceph_release }} {{ ansible_distribution_release }} no-subscription

    pve_remove_nag_path: /usr/local/lib/pve-remove-nag.sh
    latest_kernel_name: pve-kernel-6.2
    subuid_entries:
      - root:1000:1  # user
      - root:100000:65536
    subgid_entries:
      - root:5:1  # tty
      - root:29:1  # audio
      - root:44:1  # video
      - root:101:1  # input
      - root:104:1  # render
      - root:1000:1  # user
      - root:100000:65536

  tasks:

    - name: comment out enterprise repositories
      replace:
        dest: "{{ item }}"
        regexp: "^deb https://enterprise"
        replace: "# deb https://enterprise"
      loop: "{{ enterprise_repo_source_files }}"

    - name: bootstrap hosts
      include_role:
        name: buluma.bootstrap

    - name: add pve no subscription repository
      apt_repository :
        repo: "{{ pve_no_sub_repo_source }}"
        filename: pve-no-subscription
        state: present

    - name: add ceph no subscription repository
      apt_repository :
        repo: "{{ ceph_no_sub_repo_source }}"
        filename: ceph
        state: present

    - name: add repository non-free compoenent
      replace:
        dest: /etc/apt/sources.list
        regexp: "contrib$"
        replace: "contrib non-free"
      when: ansible_distribution_major_version | int <= 11

    - name: add repository non-free-firmware compoenent
      replace:
        dest: /etc/apt/sources.list
        regexp: "contrib$"
        replace: "contrib non-free-firmware"
      when: ansible_distribution_major_version | int >= 12

    - block:
        - name: copy pve remove nag script
          copy:
            src: pve-remove-nag.sh
            dest: "{{ pve_remove_nag_path }}"
            mode: "755"
          notify: run pve remove nag script

        - name: add pve remove nag dpkg post-invoke hook
          lineinfile:
            dest: /etc/apt/apt.conf.d/99-pve-remove-nag
            create: true
            mode: "644"
            line: DPkg::Post-Invoke {"{{ pve_remove_nag_path }}";}
            state: present
      
    - name: update
      apt:
        upgrade: dist
        update_cache: yes

    - name: install latest proxmox kernel
      apt:
        name: "{{ latest_kernel_name }}"
        state: present
        cache_valid_time: 86400
      when: ansible_distribution_major_version | int <= 11 and install_latest_kernel
      notify: reboot

    - name: install intel microcode
      apt:
        name: intel-microcode
        state: present
        cache_valid_time: 86400
      when: install_intel_microcode
  
    - name: check if reboot required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: reboot if required
      reboot:
      when: reboot_required_file.stat.exists

    - name: disable high availability services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - pve-ha-lrm
        - pve-ha-crm
        - corosync
      when: disable_high_availability

    - name: add entires to subuid
      lineinfile:
        dest: /etc/subuid
        line: "{{ item }}"
        state: present
      loop:  "{{ subuid_entries }}"

    - name: add entires to subgid
      lineinfile:
        dest: /etc/subgid
        line: "{{ item }}"
        state: present
      loop:  "{{ subgid_entries }}"

  handlers:
    - name: run pve remove nag script
      block:
        - name: run pve remove nag script
          command: "{{ pve_remove_nag_path }}"

        - name: restart pveproxy
          service:
            name: pveproxy
            state: restarted

    - name: reboot
      reboot:
